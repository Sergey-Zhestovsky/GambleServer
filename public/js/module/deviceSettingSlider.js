"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var a=0;a<e.length;a++){var i=e[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function _createClass(t,e,a){return e&&_defineProperties(t.prototype,e),a&&_defineProperties(t,a),t}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var DeviceSlider=function(){function v(t){var e=t.block,a=t.schema,i=void 0===a?{}:a,n=t.data,s=void 0===n?[]:n,c=t.dataSchema,d=void 0===c?{}:c,l=t.parentForm,o=t.onAdd,r=void 0===o?{}:o;_classCallCheck(this,v),this.block=e,this.schema=i,this.data=s,this.dataSchema={};var h=d.name;this.dataSchema.name=void 0===h?"name":h;var u=d.state;this.dataSchema.state=void 0===u?"state":u,this.parentForm=l,this.onAdd=r,this.blockList=[],this.deleteDataList=[],this.addButton,this.create()}return _createClass(v,[{key:"create",value:function(){var t=document.createDocumentFragment();0<this.data.length&&t.appendChild(this.uppendDataBlocks());this.addButton=$('\n\t\t\t<div class="popup-form_slider-block add-block" data-action="add">\n\t\t        <div class="popup-form_slider-add-button">\n\t\t            <i class="fa fa-plus" aria-hidden="true"></i>\n\t\t        </div>\n\t\t    </div>'),this.setAddEvent(this.addButton),t.appendChild(this.addButton.get(0)),this.block.html(t)}},{key:"setData",value:function(t){this.data=t,this.block.prepend(this.uppendDataBlocks())}},{key:"getData",value:function(){var t=[],e=!0,a=!1,i=void 0;try{for(var n,s=this.data[Symbol.iterator]();!(e=(n=s.next()).done);e=!0){var c=n.value;~this.deleteDataList.indexOf(c)||t.push(c)}}catch(t){a=!0,i=t}finally{try{e||null==s.return||s.return()}finally{if(a)throw i}}return t}},{key:"uppendDataBlocks",value:function(){var t,i=this,e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.data,n="relatedElement",a=function(e,a){$(e).on("change","input[type='checkbox']",function(t){e[n][a.state]=this.checked}).on("click","div[data-action='dalete']",function(t){i.setDeleteState(e,n)})},s=document.createDocumentFragment(),c=!0,d=!1,l=void 0;try{for(var o,r=e[Symbol.iterator]();!(c=(o=r.next()).done);c=!0){var h=o.value;(t=document.createElement("div")).classList.add("popup-form_slider-block"),t[n]=h;var u='\n\t\t\t<div class="popup-form_slider-block-header'.concat(this.schema.header&&this.schema.header.class?" ".concat(this.schema.header.class):"",'">\n\t\t\t\t<span>').concat(h[this.dataSchema.name],'</span>\n\t\t\t</div>\n            <div class="popup-form_slider-block-footer">\n                <label class="el-switch">\n                    <input type="checkbox" ').concat(h[this.dataSchema.state]?"checked":"",'>\n                    <span class="el-switch-style"></span>\n                </label>\n                <div class="popup-form_slider-delete-button" data-action="dalete">').concat(this.schema.delete&&this.schema.delete.value?this.schema.delete.value:"","</div>\n            </div>");t.innerHTML=u,a(t,this.dataSchema),s.appendChild(t),this.blockList.push(t)}}catch(t){d=!0,l=t}finally{try{c||null==r.return||r.return()}finally{if(d)throw l}}return s}},{key:"setDeleteState",value:function(e,a){var i=this;if(!~this.deleteDataList.indexOf(e[a])){var t='<div class="popup-form_slider-delete-wrapper">\n                        <div class="popup-form_slider-cancel-button" data-action="cancel">'.concat(this.schema.cancel&&this.schema.cancel.value?this.schema.cancel.value:"","</div>\n                    </div>"),n=$(t);n.one("click","div[data-action='cancel']",function(t){i.removeDeleteState(e,n,a)}),this.deleteDataList.push(e[a]),$(e).append(n)}}},{key:"removeDeleteState",value:function(t,e,a){e.addClass("hide"),setTimeout(function(){e.remove()},125),this.deleteDataList.splice(this.deleteDataList.indexOf(t[a]),1)}},{key:"clear",value:function(){var t=!(this.data=void 0),e=!1,a=void 0;try{for(var i,n=this.blockList[Symbol.iterator]();!(t=(i=n.next()).done);t=!0){var s=i.value;$(s).remove()}}catch(t){e=!0,a=t}finally{try{t||null==n.return||n.return()}finally{if(e)throw a}}this.blockList=[]}},{key:"setAddEvent",value:function(t){var a=this;t.on("click",function(){a.parentForm.openNestedElement(a.onAdd,function(t,e){t||a.addData(e)})})}},{key:"addData",value:function(t){t[this.dataSchema.state]=!0,this.data.push(t),this.addButton.before(this.uppendDataBlocks([t]))}}]),v}();exports.default=DeviceSlider;
//# sourceMappingURL=data:application/json;charset=utf8;base64,

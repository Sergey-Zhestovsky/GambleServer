"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _customSelector=_interopRequireDefault(require("/js/module/customSelector.js")),_deviceSettingSlider=_interopRequireDefault(require("/js/module/deviceSettingSlider.js"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,t){var r=[],i=!0,n=!1,o=void 0;try{for(var a,l=e[Symbol.iterator]();!(i=(a=l.next()).done)&&(r.push(a.value),!t||r.length!==t);i=!0);}catch(e){n=!0,o=e}finally{try{i||null==l.return||l.return()}finally{if(n)throw o}}return r}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}var PopupForm=function(){function f(e){var t=e.title,r=e.block,i=e.validate,n=e.behavior,o=e.succes,a=e.schema,l=void 0===a?[]:a,c=e.relatedData,s=e.nestedElements,u=e.connector;_classCallCheck(this,f),this.title=t,this.block=r,this.validate=!(!i||!i.func)&&i,this.behavior=n,this.succes=o,this.schema=l,this.relatedData=c,this.nestedElements=s,this.connector=u,this.formStack=[],this.initialObject,this.createForm()}return _createClass(f,[{key:"createForm",value:function(){var e=this.schema||[];if(this.behavior)for(var t=Object.keys(this.behavior),r=0;r<t.length;r++){var i=t[r],n=this.behavior[i];n.schema&&(e=e.concat(n.schema))}if(this.nestedElements){this.createNestedForm();var o=!0,a=!1,l=void 0;try{for(var c,s=this.nestedElements[Symbol.iterator]();!(o=(c=s.next()).done);o=!0){var u=c.value;u.schema&&(e=e.concat(u.schema))}}catch(e){a=!0,l=e}finally{try{o||null==s.return||s.return()}finally{if(a)throw l}}}var f,h,v=!0,d=!1,m=void 0;try{for(var y,k=e[Symbol.iterator]();!(v=(y=k.next()).done);v=!0){var p=y.value;switch(p.type){case"select":b(p,this.relatedData);break;case"slider":h=this,(f=p).slider=new _deviceSettingSlider.default({block:$(f.field),dataSchema:f.dataSchema,schema:f.schema,parentForm:h,onAdd:f.onAdd})}}}catch(e){d=!0,m=e}finally{try{v||null==k.return||k.return()}finally{if(d)throw m}}function b(e,t){var r=[],i=[],n=!0,o=!1,a=void 0;try{for(var l,c=t[e.name][Symbol.iterator]();!(n=(l=c.next()).done);n=!0){var s=l.value;r.push(s[e.selectorConfig.key]),i.push(s[e.selectorConfig.value])}}catch(e){o=!0,a=e}finally{try{n||null==c.return||c.return()}finally{if(o)throw a}}e.selector=new _customSelector.default({block:$(e.field),dataStep:i,keyStep:r})}}},{key:"open",value:function(e,t){var r,i,n,o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:t,a=this.behavior&&this.behavior[e].schema?this.behavior[e].schema:this.schema;switch(e){case"add":break;case"edit":this.openEdit(t,a),n=t,this.initialObject=t;break;default:return o("unknown action")}r=this.behavior?$(this.behavior[e].block):null,i=this.behavior?this.behavior[e].succes:this.succes,this.formStack.push({currentBlock:r,succesCallBack:o,initialObject:n,currentSchema:a}),this.show(),this.setEvent("close"),this.setEvent("close",this.block.find(".popup-form_header-close i")),this.setEvent("succes",this.block.find(i))}},{key:"openEdit",value:function(e,t){e=JSON.parse(JSON.stringify(e));var r=!0,i=!1,n=void 0;try{for(var o,a=t[Symbol.iterator]();!(r=(o=a.next()).done);r=!0){var l=o.value;c(l.type,$(l.field),e[l.name],l)}}catch(e){i=!0,n=e}finally{try{r||null==a.return||a.return()}finally{if(i)throw n}}function c(e,t,r,i){switch(e){case"input":t.val(r);break;case"select":i.selector.getSetValue(r[i.selectorConfig.key],r[i.selectorConfig.value]);break;case"text":t.text(function(e,t){if(!t||!Array.isArray(t))return e;var r=e,i=!0,n=!1,o=void 0;try{for(var a,l=t[Symbol.iterator]();!(i=(a=l.next()).done);i=!0){var c=a.value;r=r[c]||""}}catch(e){n=!0,o=e}finally{try{i||null==l.return||l.return()}finally{if(n)throw o}}return r}(r,i.source));break;case"slider":i.slider.setData(r)}}}},{key:"show",value:function(){this.form.currentBlock&&(this.form.currentBlock.show(),this.form.currentBlock.parent().show()),this.block.addClass("show-block")}},{key:"hide",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(){};this.block.removeClass("show-block"),setTimeout(e,125)}},{key:"clear",value:function(){if(this.form){var e=!0,t=!1,r=void 0;try{for(var i,n=this.form.currentSchema[Symbol.iterator]();!(e=(i=n.next()).done);e=!0){var o=i.value;a(o.type,$(o.field),o)}}catch(e){t=!0,r=e}finally{try{e||null==n.return||n.return()}finally{if(t)throw r}}this.validate&&this.removeErrors(),this.closeBlockInStack()}function a(e,t,r){switch(e){case"input":t.val("");break;case"select":r.selector.setDefault();break;case"text":t.text("");break;case"slider":r.slider.clear()}}}},{key:"clearAll",value:function(){for(;0!=this.formStack.length;)this.clear();this.initialObject=void 0}},{key:"setEvent",value:function(e,t){var u,f=this,h=new Map,r=function(e){var s,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:f.block,r=(s=e,function(e){if(e.delegateTarget===e.target){if("succes"==s&&!f.submit())return;if(u){var t=!0,r=!1,i=void 0;try{for(var n,o=h[Symbol.iterator]();!(t=(n=o.next()).done);t=!0){var a=_slicedToArray(n.value,2),l=a[0],c=a[1];l.off("click",c)}}catch(e){r=!0,i=e}finally{try{t||null==o.return||o.return()}finally{if(r)throw i}}h.clear(),f.hide(function(){f.clearAll()}),u=!1}}});u=!0,h.set(t,r),t.on("click",r)};(this.setEvent=r)(e,t)}},{key:"submit",value:function(){var e,t=this.getObject(this.form.initialObject),r={};if(this.form.initialObject&&function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=1<arguments.length?arguments[1]:void 0,r=2<arguments.length?arguments[2]:void 0,i=!0,n=!0,o=!1,a=void 0;try{for(var l,c=r[Symbol.iterator]();!(n=(l=c.next()).done);n=!0){var s=l.value;switch(s.type){case"input":i&=e[s.name]==t[s.name];break;case"select":i&=e[s.name]&&e[s.name][s.selectorConfig.key]==t[s.name];break;case"slider":i&=JSON.stringify(e[s.name])===JSON.stringify(t[s.name])}}}catch(e){o=!0,a=e}finally{try{n||null==c.return||c.return()}finally{if(o)throw a}}return i}(this.form.initialObject,t,this.form.currentSchema))return!0;var i=!0,n=!1,o=void 0;try{for(var a,l=this.form.currentSchema[Symbol.iterator]();!(i=(a=l.next()).done);i=!0){var c=a.value;c.validation&&(r[c.name]=c.validation)}}catch(e){n=!0,o=e}finally{try{i||null==l.return||l.return()}finally{if(n)throw o}}if(this.validate){if(e=(new this.validate.func).validate(t,r),0!=Object.keys(e))return this.errorHandler(e),!1;this.form.succesCallBack(null,t)}else this.form.succesCallBack(null,t);return!0}},{key:"getObject",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=JSON.parse(JSON.stringify(e)),r=!0,i=!1,n=void 0;try{for(var o,a=this.form.currentSchema[Symbol.iterator]();!(r=(o=a.next()).done);r=!0){var l=o.value,c=s(l.type,$(l.field),l);void 0!==c&&(t[l.name]=c)}}catch(e){i=!0,n=e}finally{try{r||null==a.return||a.return()}finally{if(i)throw n}}return t;function s(e,t,r){switch(e){case"input":return t.val();case"select":return r.selector.getSetValue();case"slider":return r.slider.getData()}}}},{key:"errorHandler",value:function(e){var t=!0,r=!1,i=void 0;try{for(var n,o=this.form.currentSchema[Symbol.iterator]();!(t=(n=o.next()).done);t=!0){var a=n.value;e[a.name]?this.setError($(a.field),$(a.field).siblings(".popup-form_error-block"),a.type):this.removeError($(a.field),$(a.field).siblings(".popup-form_error-block"),a.type)}}catch(e){r=!0,i=e}finally{try{t||null==o.return||o.return()}finally{if(r)throw i}}}},{key:"setError",value:function(e,t,r){e.addClass("popup-form_error"),t.addClass("show-block")}},{key:"removeError",value:function(e,t,r){e.removeClass("popup-form_error"),t.removeClass("show-block")}},{key:"removeErrors",value:function(){var e=!0,t=!1,r=void 0;try{for(var i,n=this.form.currentSchema[Symbol.iterator]();!(e=(i=n.next()).done);e=!0){var o=i.value;this.removeError($(o.field),$(o.field).siblings(".popup-form_error-block"),o.type)}}catch(e){t=!0,r=e}finally{try{e||null==n.return||n.return()}finally{if(t)throw r}}}},{key:"createNestedForm",value:function(){var r=this,e=!0,t=!1,i=void 0;try{for(var n,o=function(){var e=n.value;e.DOM={},e.DOM.block=$(e.block),e.DOM.container=e.DOM.block.parent();var t=$('\n\t\t\t<div class="popup-form_nested-container-header">\n\t            <div class="popup-form_nested-container-back" data-action="return">\n\t                <i class="fa fa-arrow-left" aria-hidden="true"></i>\n\t            </div>\n\t            <div class="popup-form_nested-container-header-title"></div>\n\t        </div>');e.DOM.container.prepend(t),e.DOM.return=t.find("div[data-action='return']"),e.DOM.title=t.find(".popup-form_nested-container-header-title"),e.DOM.loading=e.DOM.block.find(".popup-form_body-container-wrapper-loading"),e.DOM.succes=$(e.succes),e.DOM.succes.on("click",function(){r.form.currentBlock===e.DOM&&r.submit()})},a=this.nestedElements[Symbol.iterator]();!(e=(n=a.next()).done);e=!0)o()}catch(e){t=!0,i=e}finally{try{e||null==a.return||a.return()}finally{if(t)throw i}}}},{key:"openNestedElement",value:function(e){var r,t,i=this,n=e.nestedElement,o=n.id,a=n.title,l=e.serverRequest,c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:function(){},s=function(e){r&&r.cancel(),i.form.currentBlock.closeFunction=void 0,i.form.currentBlock.loading.removeClass("active"),e&&i.clear()},u=function(e,t){e||(s(!0),c(e,t))},f=!0,h=!1,v=void 0;try{for(var d,m=this.nestedElements[Symbol.iterator]();!(f=(d=m.next()).done);f=!0){var y=d.value;y.id===o&&(t=y)}}catch(e){h=!0,v=e}finally{try{f||null==m.return||m.return()}finally{if(h)throw v}}t&&(t.DOM.title.text(a),t.DOM.closeFunction=s,this.formStack.push({currentBlock:t.DOM,succesCallBack:l?function(e,t){e||(i.form.currentBlock.loading.addClass("active"),r=i.connector.customEventRequest(l.eventName,{objectId:i.initialObject._id,createdObject:t},u))}:u,currentSchema:t.schema}),this.showNestedElement(),t.DOM.return.one("click",s))}},{key:"showNestedElement",value:function(){var e=this.form.currentBlock.container,t=this.previousForm.currentBlock.container?this.previousForm.currentBlock.container:this.previousForm.currentBlock.parent();t.addClass("hide"),e.show(),setTimeout(function(){t.hide()},500)}},{key:"hideNestedElement",value:function(){var e=this.form.currentBlock.container,t=this.previousForm.currentBlock.container?this.previousForm.currentBlock.container:this.previousForm.currentBlock.parent();t.show(),setTimeout(function(){t.removeClass("hide")},0),setTimeout(function(){e.hide()},500)}},{key:"closeNestedElement",value:function(){this.form.currentBlock&&this.form.currentBlock.container?this.hideNestedElement():this.form.currentBlock&&this.form.currentBlock.hide(),this.formStack.pop()}},{key:"closeBlockInStack",value:function(){this.form.currentBlock&&this.form.currentBlock.closeFunction&&(this.form.currentBlock.closeFunction(),this.form.currentBlock.return.off("click",this.form.currentBlock.closeFunction)),this.closeNestedElement()}},{key:"form",get:function(){return this.formStack[this.formStack.length-1]}},{key:"previousForm",get:function(){return this.formStack[this.formStack.length-2]}}]),f}();exports.default=PopupForm;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
